NAME_NUMBERS_DICT = {
    1: 'Лидерство, инициатива, решительность, энергия, независимость, уверенность в себе.',
    2: 'Дипломатичность, тактичность, чувствительность, гармония, склонность к компромиссам.',
    3: 'Креативность, спонтанность, оптимизм, легкость общения, склонность к риску.',
    4: 'Системность, организованность, практичность, точность, устойчивость к стрессам.',
    5: 'Авантюризм, свободолюбие, склонность к переменам, любовь к путешествиям и приключениям.',
    6: 'Духовность, романтика, желание служить людям, чувство долга, эстетический вкус.',
    7: 'Аналитический склад ума, интуиция, философский взгляд на мир, склонность к изучению наук.',
    8: 'Материальный успех, бизнес-ориентированность, амбициозность, решительность, стремление к власти.',
    9: 'Гуманизм, сострадание, терпимость, духовное развитие, желание помогать другим.'
}

BIRTH_NUMBERS_DICT = {
    1: {
        'characteristic': 'лидерство, инициативность, решительность, энергия, независимость, уверенность в себе.',
        'advantages': 'способность к лидерству, настойчивость в достижении целей, высокая самооценка, решительность, мотивация.',
        'flaws': 'склонность к эгоизму, несговорчивость, некоторая жесткость в отношениях с другими людьми, склонность к доминированию и конфликтам.'
    },
    2: {
        'characteristic': 'дипломатичность, тактичность, чувствительность, гармония, склонность к компромиссам.',
        'advantages': 'умение находить общий язык с разными людьми, чуткость и эмпатия, гибкость, терпимость, умение избегать конфликтов.',
        'flaws': 'склонность к неопределенности, неуверенность в своих решениях, некоторая нерешительность, неспособность к резким действиям.'
    },
    3: {
        'characteristic': 'креативность, спонтанность, оптимизм, легкость общения, склонность к риску.',
        'advantages': 'творческий подход к решению проблем, открытость для нового, высокий уровень энергии и оптимизма, легкость общения с другими людьми.',
        'flaws': 'склонность к импульсивности, некоторая безответственность, низкий уровень концентрации, неумение планировать свое время и ресурсы.'
    },
    4: {
        'characteristic': 'системность, организованность, практичность, точность, устойчивость к стрессам.',
        'advantages': 'высокий уровень ответственности, трудолюбие, организованность, точность, практичность, устойчивость к стрессам.',
        'flaws': 'склонность к консерватизму, некоторая застенчивость в общении, отсутствие гибкости в поведении и мышлении.'
    },
    5: {
        'characteristic': 'авантюризм, свободолюбие, склонность к переменам, любовь к путешествиям и приключениям.',
        'advantages': 'высокий уровень энергии и оптимизма, любовь к новым впечатлениям, открытость для свободы и независимости, склонность к фантазии.',
        'flaws': 'нарушение стабильности и практичности, склонность к риску и импульсивности, неумение сохранять долгосрочные отношения и цели.'
    },
    6: {
        'characteristic': 'духовность, романтика, желание служить людям, чувство долга, эстетический вкус.',
        'advantages': 'высокий уровень духовности, чувствительность к миру и красоте, желание служить и помогать людям, глубокая эмпатия, чувство долга перед окружающими.',
        'flaws': 'склонность к идеализации, некоторая несостоятельность в практических делах, отсутствие реализма в оценке обстоятельств и возможностей.'
    },
    7: {
        'characteristic': 'аналитический склад ума, интуиция, философский взгляд на мир, склонность к изучению наук.',
        'advantages': 'высокий уровень интеллекта и аналитических способностей, философский подход к пониманию мира, способность к саморазвитию и изучению нового.',
        'flaws': 'склонность к изоляции, некоторая неприязнь к социальным нормам и требованиям, неумение работать в коллективе.'
    },
    8: {
        'characteristic': 'материальный успех, бизнес-ориентированность, амбициозность, решительность, стремление к власти.',
        'advantages': 'высокий уровень амбиций и стремления к успеху, решительность, склонность к бизнесу и предпринимательству, стремление к лидерству и власти.',
        'flaws': 'склонность к жестокости и безжалостности в достижении целей, конфликтность, ориентация на материальное благополучие.'
    },
    9: {
        'characteristic': 'гуманизм, сострадание, терпимость, духовное развитие, желание помогать другим.',
        'advantages': 'высокий уровень духовной зрелости, чувство сострадания, открытость для людей и мира, желание служить и помогать другим.',
        'flaws': 'некоторая пассивность и зависимость от других людей, склонность к идеализации и эксплуатации за счет своих интересов.'
    },
}

ZODIAC_DICT = {
    'Capricorn': ['♑️', 'Козерог'],
    'Aquarius': ['♒️', 'Водолей'],
    'Pisces': ['♓️', 'Рыбы'],
    'Aries': ['♈️', 'Овен'],
    'Taurus': ['♉️', 'Телец'],
    'Gemini': ['♊️', 'Близнецы'],
    'Cancer': ['♋️', 'Рак'],
    'Leo': ['♌️', 'Лев'],
    'Virgo': ['♍️', 'Дева'],
    'Libra': ['♎️', 'Весы'],
    'Scorpio': ['♏️', 'Скорпион'],
    'Sagittarius': ['♐️', 'Стрелец']
}


def get_name_number(name):
    '''Функция для рассчета числа по ФИО'''
    # Приводим имя к верхнему регистру и убираем пробелы
    name = name.upper().replace(" ", "")
    # Сопоставляем каждой букве число от 1 до 9
    letter_values = {"А": 1, "Б": 2, "В": 3, "Г": 4, 
                     "Д": 5, "Е": 6, "Ё": 7, "Ж": 8, 
                     "З": 9, "И": 1, "Й": 2, "К": 3, 
                     "Л": 4, "М": 5, "Н": 6, "О": 7, 
                     "П": 8, "Р": 9, "С": 1, "Т": 2, 
                     "У": 3, "Ф": 4, "Х": 5, "Ц": 6, 
                     "Ч": 7, "Ш": 8, "Щ": 9, "Ъ": 1, 
                     "Ы": 2, "Ь": 3, "Э": 4, "Ю": 5, 
                     "Я": 6, "-": 0}
    # Вычисляем сумму чисел для каждой буквы в имени
    name_sum = sum([letter_values[letter] for letter in name])
    # Суммируем цифры полученной суммы до тех пор, пока не получим одну цифру
    while name_sum > 9:
        name_sum = sum(int(digit) for digit in str(name_sum))
    return name_sum

def get_birthdate_number(birthdate):
    '''Функция для расчета числа по дате рождения'''
    # Разбиваем дату на отдельные числа (год, месяц, день)
    day, month, year = [
        int(part) for part in birthdate.split(".")
    ]
    # Вычисляем сумму чисел для года, месяца и дня рождения
    date_sum = sum([int(digit) for digit in str(day)]) + \
               sum([int(digit) for digit in str(month)]) + \
               sum([int(digit) for digit in str(year)])
    # Суммируем цифры полученной суммы до тех пор, пока не получим одну цифру
    while date_sum > 9:
        date_sum = sum(int(digit) for digit in str(date_sum))
    return date_sum

# result = get_psychomatrix("Никитин Михаил Олегович", '6 янв 95')
# print(result)

def get_zodiac(birthdate):
    day, month, _ = [int(i) for i in birthdate.split('.')]
    if month == 1:
        if day < 21:
            return 'Capricorn'
        else:
            return 'Aquarius'
    elif month == 2:
        if day < 20:
            return 'Aquarius'
        else:
            return 'Pisces'
    elif month == 3:
        if day < 21:
            return 'Pisces'
        else:
            return 'Aries'
    elif month == 4:
        if day < 21:
            return 'Aries'
        else:
            return 'Taurus'
    elif month == 5:
        if day < 22:
            return 'Taurus'
        else:
            return 'Gemini'
    elif month == 6:
        if day < 22:
            return 'Gemini'
        else:
            return 'Cancer'
    elif month == 7:
        if day < 23:
            return 'Cancer'
        else:
            return 'Leo'
    elif month == 8:
        if day < 24:
            return 'Leo'
        else:
            return 'Virgo'
    elif month == 9:
        if day < 23:
            return 'Virgo'
        else:
            return 'Libra'
    elif month == 10:
        if day < 24:
            return 'Libra'
        else:
            return 'Scorpio'
    elif month == 11:
        if day < 23:
            return 'Scorpio'
        else:
            return 'Sagittarius'
    else:
        if day < 22:
            return 'Sagittarius'
        else:
            return 'Capricorn'
