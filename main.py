import telegram, telegram.ext
from os import getenv
from dotenv import load_dotenv
import sqlite3
import schedule
import datetime
from utils import validate_city

load_dotenv()

bot = telegram.Bot(token=getenv('TELEGRAM_BOT_API'))
upd = telegram.ext.Updater(token=getenv('TELEGRAM_BOT_API'))

connect = sqlite3.connect('users.db')
cursor = connect.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute('''CREATE TABLE IF NOT EXISTS users
             (id INTEGER PRIMARY KEY, name TEXT, city TEXT, birthday TEXT)''')

connect.commit()

def start(update, context):
    user_id = update.effective_chat.id
    conn = sqlite3.connect('users.db')
    with conn:
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM users WHERE id=?", (user_id,))
        row = cursor.fetchone()
        if row:
            # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            name, birthday = row[1], row[2]
            update.message.reply_text(f'<b>–ü—Ä–∏–≤–µ—Ç,</b> <i>{name}</i>! –†–∞–¥, —á—Ç–æ —Ç—ã —Å–Ω–æ–≤–∞ —Å '
                                      '–Ω–∞–º–∏.üòä', parse_mode='HTML')
        else:
            # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –∑–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤—É—é —Ñ–æ—Ä–º—É –¥–ª—è –≤–≤–æ–¥–∞ –§–ò–û –∏ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
            update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?')
            return 'get_name'

def get_name(update, context):
    global name
    name = update.message.text
    update.message.reply_text(f'–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name}! –ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?')
    return 'get_city'

def get_city(update, context):
    global city
    city = update.message.text
    try:
        # –ò—â–µ–º —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥ –Ω–∞ –∫–∞—Ä—Ç–µ:)
        city = validate_city(city)
    except ValueError:
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –ø–µ—Ä–µ—Å–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞
        update.message.reply_text('–ù–µ –Ω–∞—à–µ–ª —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ '
                                  '—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≥–æ—Ä–æ–¥')
        return 'get_city'
    else:
        update.message.reply_text(f'–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name} –∏–∑ {city}! '
                              '–ö–æ–≥–¥–∞ —Ç—ã —Ä–æ–¥–∏–ª—Å—è(–∞—Å—å)? (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì)')
        return 'get_birthday'

# –≤ —Ñ—É–Ω–∫—Ü–∏–∏ get_birthday() –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º cursor
def get_birthday(update, context):
    global birthday, user_id
    text = update.message.text
    user_id = update.effective_chat.id
    try:
        # –ü—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—ä–µ–∫—Ç datetime.date
        birthday = datetime.datetime.strptime(text, '%d.%m.%Y').date()
    except ValueError:
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –ø–µ—Ä–µ—Å–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–≤–æ–¥ –¥–∞—Ç—ã
        update.message.reply_text('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, '
                                  '–≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì')
        return 'get_birthday'
    else:
        conn = sqlite3.connect('users.db')
        with conn:
            cursor = conn.cursor()
            cursor.execute("INSERT INTO users (id, name, city, birthday) \
                           VALUES (?, ?, ?, ?)",
                           (user_id, name, city, birthday))
        update.message.reply_text(f'–û—Ç–ª–∏—á–Ω–æ, {name}! –¢—ã —Ä–æ–¥–∏–ª—Å—è(–∞—Å—å) '
                                  f'{birthday.strftime("%d.%m.%Y")}.')
        return telegram.ext.ConversationHandler.END
    

conv_handler = telegram.ext.ConversationHandler(
    entry_points=[telegram.ext.CommandHandler('start', start)],
    states={
        'get_name': [telegram.ext.MessageHandler(telegram.ext.Filters.text,
                                                 get_name)],
        'get_city': [telegram.ext.MessageHandler(telegram.ext.Filters.text,
                                                 get_city)],
        'get_birthday': [telegram.ext.MessageHandler(telegram.ext.Filters.text,
                                                     get_birthday)],
    },
    fallbacks=[]
)

upd.dispatcher.add_handler(conv_handler)
upd.start_polling()